# ============================================
# Workflow: docker-release-from-tag.yml
# Purpose: Build Docker image and JAR from a Git tag using version in build.gradle
# Publishes Docker image: <artifactId>:<version>-<shortSHA>-build-<run_number>
# Uploads JAR as GitHub release asset
# Also generates release notes including merged PRs
# ============================================

name: Docker Release from Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permissions to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Extract version and artifact name from build.gradle
        id: meta
        run: |
          VERSION=$(grep '^version' build.gradle | sed "s/version\s*=\s*['\"]//;s/['\"]//g")
          ARTIFACT=$(grep '^rootProject.name' settings.gradle | sed "s/rootProject.name\s*=\s*['\"]//;s/['\"]//g")
          SHORT_SHA=$(git rev-parse --short HEAD)
          BUILD_NUM=${{ github.run_number }}

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "BUILD_NUM=$BUILD_NUM" >> $GITHUB_OUTPUT

      - name: Build JAR
        run: ./gradlew clean bootJar

      - name: List files in build/libs
        run: ls -l build/libs

      - name: Build Docker image
        run: |
          docker build -t ${{ steps.meta.outputs.ARTIFACT }}:${{ steps.meta.outputs.VERSION }}-${{ steps.meta.outputs.SHORT_SHA }}-build-${{ steps.meta.outputs.BUILD_NUM }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag ${{ steps.meta.outputs.ARTIFACT }}:${{ steps.meta.outputs.VERSION }}-${{ steps.meta.outputs.SHORT_SHA }}-build-${{ steps.meta.outputs.BUILD_NUM }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.meta.outputs.ARTIFACT }}:${{ steps.meta.outputs.VERSION }}-${{ steps.meta.outputs.SHORT_SHA }}-build-${{ steps.meta.outputs.BUILD_NUM }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.meta.outputs.ARTIFACT }}:${{ steps.meta.outputs.VERSION }}-${{ steps.meta.outputs.SHORT_SHA }}-build-${{ steps.meta.outputs.BUILD_NUM }}

      - name: Generate release notes
        id: notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
          tag: v${{ steps.meta.outputs.VERSION }}
          name: v${{ steps.meta.outputs.VERSION }}
          version: ${{ steps.meta.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release with notes and JAR
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.meta.outputs.VERSION }}
          name: v${{ steps.meta.outputs.VERSION }}
          body: ${{ steps.notes.outputs.body }}
          files: build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
